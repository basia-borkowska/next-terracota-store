datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/** Use lowercase to match your frontend & query params */
enum Category {
  table
  chair
  bed
  sofa
  carpet
  lamp
}

model Product {
  id              String   @id
  // Localized fields
  title_en        String
  title_pl        String
  description_en  String
  description_pl  String

  images          String[]            // TEXT[] in Postgres
  category        Category

  // Money as Decimal; weâ€™ll convert to number/string in mappers
  price           Decimal             @db.Decimal(12,2)
  discountedPrice Decimal?            @db.Decimal(12,2)
  currency        String              @default("PLN") @db.VarChar(8)

  isNew           Boolean             @default(false)

  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt

  campaignItems   CampaignProduct[]

  @@index([category])
  @@index([isNew])
  @@index([discountedPrice])
  @@index([createdAt])
}

model Campaign {
  id             String  @id

  // Localized
  title_en       String
  title_pl       String
  description_en String
  description_pl String
  story_en       String
  story_pl       String

  images         String[]            // TEXT[]

  products       CampaignProduct[]

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model CampaignProduct {
  campaignId String
  productId  String
  position   Int      @default(0)

  campaign   Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade)
  product    Product  @relation(fields: [productId],  references: [id], onDelete: Cascade)

  @@id([campaignId, productId])
  @@index([campaignId, position])
}

enum UserRole {
  user
  admin
}

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  passwordHash   String
  name           String?
  role           UserRole @default(user)
  emailVerified  DateTime?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}